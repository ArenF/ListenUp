version: '3.8'

services:
  server:
    build:
      context: ./listenup/server
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - CLIENT_URL=http://localhost:5173
    volumes:
      # 소스 코드 실시간 반영 (핫 리로드)
      - ./listenup/server/src:/app/src
      - ./listenup/server/package.json:/app/package.json
      - ./listenup/server/tsconfig.json:/app/tsconfig.json
      # node_modules는 컨테이너 내부 것 사용 (성능 향상)
      - server_node_modules:/app/node_modules
    networks:
      - app-network
    # 파일 변경 감지를 위한 설정
    stdin_open: true
    tty: true

  client:
    build:
      context: ./listenup/client
      dockerfile: Dockerfile.dev
    ports:
      - "5173:5173"
    environment:
      - VITE_SERVER_URL=http://server:3000
      - VITE_HMR_HOST=localhost  # Codespaces에서 HMR 작동을 위해
    volumes:
      # 소스 코드 실시간 반영
      - ./listenup/client/src:/app/src
      - ./listenup/client/package.json:/app/package.json
      - ./listenup/client/vite.config.ts:/app/vite.config.ts
      - ./listenup/client/svelte.config.js:/app/svelte.config.js
      - ./listenup/client/tsconfig.json:/app/tsconfig.json
      # node_modules는 컨테이너 내부 것 사용
      - client_node_modules:/app/node_modules
    depends_on:
      - server
    networks:
      - app-network
    stdin_open: true
    tty: true

  # 개발용 데이터베이스 (향후 확장)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network
    command: redis-server --appendonly yes

# 볼륨 정의 (node_modules 캐싱)
volumes:
  server_node_modules:
  client_node_modules:
  redis_data:

networks:
  app-network:
    driver: bridge